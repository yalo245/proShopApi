{
	"info": {
		"_postman_id": "03afe7ec-2736-4895-9de4-6ecc0b8b973e",
		"name": "proshopAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Dublicate User",
					"item": [
						{
							"name": "C25 Register user with valid data Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"testUsername\", \"User_\" + Date.now())\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{testUsername}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"Pa33word!\",\r\n  \"password2\": \"Pa33word!\",\r\n  \"firstname\": \"Viola\",\r\n  \"lastname\": \"McCullough\",\r\n  \"phone\": \"270-413-0060\"\r\n}\r\n ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "C27 register user alredy exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test(\"C27 Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"C27 Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"pm.test(\"C27 Body has valid messege\", function () {\r",
											"    pm.expect(response.message).to.be.eq(`An account with the username ${pm.environment.get('testUsername')} already exists.`);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{testUsername}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"Pa33word!\",\r\n  \"password2\": \"Pa33word!\"\r\n\r\n}\r\n ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/users/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "C25 Register user with valid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"const req = JSON.parse(pm.request.body);\r",
									"console.log(pm.request.body)\r",
									"\r",
									"pm.test(\"C25 Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"C25 Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"C25 Body has valid messege\", function () {\r",
									"    pm.expect(response.msg).to.be.eq(\"Register successful!\");\r",
									"});\r",
									"\r",
									"pm.test(\"C25 Body has valid success\", function () {\r",
									"    pm.expect(response.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"C25 Body has valid token\", function () {\r",
									"    pm.expect(response.token).to.be.not.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"C25 Body has valid id\", function () {\r",
									"    pm.expect(response.user.id).to.be.not.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"C25 Body has valid username\", function () {\r",
									"    pm.expect(response.user.username).to.eq(req.username);\r",
									"});\r",
									"\r",
									"pm.test(\"C25 Body has valid firstname\", function () {\r",
									"    pm.expect(response.user.firstname).to.eq(req.firstname);\r",
									"});\r",
									"\r",
									"pm.test(\"C25 Body has valid lastname\", function () {\r",
									"    pm.expect(response.user.lastname).to.eq(req.lastname);\r",
									"});\r",
									"\r",
									"pm.test(\"C25 Body has valid emai\", function () {\r",
									"    pm.expect(response.user.email).to.eq(req.email);\r",
									"});\r",
									"\r",
									"pm.test(\"C25 Body has valid success\", function () {\r",
									"    pm.expect(response.user.isAdmin).to.be.false;\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"username\", \"User_\" + Date.now())\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"Pa33word!\",\r\n  \"password2\": \"Pa33word!\",\r\n  \"firstname\": \"Viola\",\r\n  \"lastname\": \"McCullough\",\r\n  \"phone\": \"270-413-0060\"\r\n}\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "C26 register required data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"const req = JSON.parse(pm.request.body);\r",
									"console.log(pm.request.body)\r",
									"\r",
									"pm.test(\"C26 Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"C26 Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"C26 Body has valid messege\", function () {\r",
									"    pm.expect(response.msg).to.be.eq(\"Register successful!\");\r",
									"});\r",
									"\r",
									"pm.test(\"C26 Body has valid success\", function () {\r",
									"    pm.expect(response.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"C26 Body has valid token\", function () {\r",
									"    pm.expect(response.token).to.be.not.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"C26 Body has valid id\", function () {\r",
									"    pm.expect(response.user.id).to.be.not.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"C26 Body has valid username\", function () {\r",
									"    pm.expect(response.user.username).to.eq(req.username);\r",
									"});\r",
									"\r",
									"pm.test(\"C26 Body has valid emai\", function () {\r",
									"    pm.expect(response.user.email).to.eq(req.email);\r",
									"});\r",
									"\r",
									"pm.test(\"C26 Body has valid success\", function () {\r",
									"    pm.expect(response.user.isAdmin).to.be.false;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"username\", \"User_\" + Date.now())"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"Pa33word!\",\r\n  \"password2\": \"Pa33word!\"\r\n\r\n}\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "C28 register with empty user name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"C28 Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"C28 Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"C28 Body has valid messege\", function () {\r",
									"    pm.expect(response.message).to.be.eq(\"Please fill in mandatory fields.\");\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"Pa33word!\",\r\n  \"password2\": \"Pa33word!\"\r\n\r\n}\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "C29 register user with 2 char name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"C29 Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"C29 Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"C29 Body has valid messege\", function () {\r",
									"    pm.expect(response.message).to.be.eq(\"Username should be at least three characters long.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"Aa \",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"Pa33word!\",\r\n  \"password2\": \"Pa33word!\"\r\n\r\n}\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "C30 register user with username more than20 char",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"C30 Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"C30 Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"C30 Body has valid messege\", function () {\r",
									"    pm.expect(response.message).to.be.eq(\"Username should be 20 characters maximum.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"Tomas_Anderson_Tomas_Anderson_\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"Pa33word!\",\r\n  \"password2\": \"Pa33word!\"\r\n\r\n}\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "C31 register user with 3 char name Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"const req = JSON.parse(pm.request.body);\r",
									"console.log(pm.request.body)\r",
									"\r",
									"pm.test(\"C31 Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"C31 Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"C31 Body has valid messege\", function () {\r",
									"    pm.expect(response.msg).to.be.eq(\"Register successful!\");\r",
									"});\r",
									"\r",
									"pm.test(\"C31 Body has valid success\", function () {\r",
									"    pm.expect(response.success).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"C31 Body has valid token\", function () {\r",
									"    pm.expect(response.token).to.be.not.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"C31 Body has valid id\", function () {\r",
									"    pm.expect(response.user.id).to.be.not.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"C31 Body has valid username\", function () {\r",
									"    pm.expect(response.user.username).to.eq(req.username);\r",
									"});\r",
									"\r",
									"pm.test(\"C31 Body has valid firstname\", function () {\r",
									"    pm.expect(response.user.firstname).to.eq(req.firstname);\r",
									"});\r",
									"\r",
									"pm.test(\"C31 Body has valid lastname\", function () {\r",
									"    pm.expect(response.user.lastname).to.eq(req.lastname);\r",
									"});\r",
									"\r",
									"pm.test(\"C31 Body has valid emai\", function () {\r",
									"    pm.expect(response.user.email).to.eq(req.email);\r",
									"});\r",
									"\r",
									"pm.test(\"C31 Body has valid success\", function () {\r",
									"    pm.expect(response.user.isAdmin).to.be.false;\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"username\", \"User_\" + Date.now())"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"gtu\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"Pa33word!\",\r\n  \"password2\": \"Pa33word!\"\r\n\r\n}\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "C35 register with empty email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"C35 Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"C35 Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"C35 Body has valid messege\", function () {\r",
									"    pm.expect(response.message).to.be.eq(\"Please fill in mandatory fields.\");\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"username\", \"User_\" + Date.now())"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"email\": \"\",\r\n  \"password\": \"Pa33word!\",\r\n  \"password2\": \"Pa33word!\"\r\n\r\n}\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "C36 register with invalid email Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"C36 Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"C36 Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"C36 Body has valid messege\", function () {\r",
									"    pm.expect(response.message).to.be.eq(\"Invalid email.\");\r",
									"})\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"username\", \"User_\" + Date.now())"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"email\": \"Elen@ora58@gmail.com\",\r\n  \"password\": \"Pa33word!\",\r\n  \"password2\": \"Pa33word!\",\r\n  \"firstname\": \"Viola\",\r\n  \"lastname\": \"McCullough\",\r\n  \"phone\": \"270-413-0060\"\r\n}\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "C37 register with empty password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"C37 Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"C37 Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"C37 Body has valid messege\", function () {\r",
									"    pm.expect(response.message).to.be.eq(\"Please fill in mandatory fields.\");\r",
									"})\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"username\", \"User_\" + Date.now())"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"\",\r\n  \"password2\": \"Pa33word!\",\r\n  \"firstname\": \"Viola\",\r\n  \"lastname\": \"McCullough\",\r\n  \"phone\": \"270-413-0060\"\r\n}\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "C43 register with invalid password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"C43 Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"C43 Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"C43 Body has valid messege\", function () {\r",
									"    pm.expect(response.message).to.be.eq(\"Choose a better password. Password must contains: lower case, upper case, digits, special char.\");\r",
									"})\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"username\", \"User_\" + Date.now())"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"111111\",\r\n  \"password2\": \"111111\",\r\n  \"firstname\": \"Viola\",\r\n  \"lastname\": \"McCullough\",\r\n  \"phone\": \"270-413-0060\"\r\n}\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "C44 register with empty confirm password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"C44 Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"C44 Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"C44 Body has valid messege\", function () {\r",
									"    pm.expect(response.message).to.be.eq(\"Please fill in mandatory fields.\");\r",
									"})\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"username\", \"User_\" + Date.now())"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"Pa33word!\",\r\n  \"password2\": \"\",\r\n  \"firstname\": \"Viola\",\r\n  \"lastname\": \"McCullough\",\r\n  \"phone\": \"270-413-0060\"\r\n}\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Registered user",
					"item": [
						{
							"name": "C25 Register user with valid data Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"username\", \"User_\" + Date.now())"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"{{loginUserName}}\",\r\n  \"email\": \"{{loginEmail}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"password2\": \"{{password}}\",\r\n  \"firstname\": \"Viola\",\r\n  \"lastname\": \"McCullough\",\r\n  \"phone\": \"270-413-0060\"\r\n}\r\n ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "C54 Login user with valid data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"const req = JSON.parse(pm.request.body);\r",
											"console.log(pm.request.body)\r",
											"\r",
											"pm.test(\"C54 Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"C54 Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"C54 Body has valid messege\", function () {\r",
											"    pm.expect(response.msg).to.be.eq(\"Login successful!\");\r",
											"});\r",
											"\r",
											"pm.test(\"C54 Body has valid success\", function () {\r",
											"    pm.expect(response.success).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"C54 Body has valid token\", function () {\r",
											"    pm.expect(response.token).to.be.not.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"C54 Body has valid id\", function () {\r",
											"    pm.expect(response.user.id).to.be.not.empty;\r",
											"});\r",
											"\r",
											"pm.test(\"C54 Body has valid username\", function () {\r",
											"    pm.expect(response.user.username).to.eq(\"Elva_Adams\");\r",
											"    console.log(response.user.username)\r",
											"});\r",
											"\r",
											"pm.test(\"C54 Body has valid emai\", function () {\r",
											"    pm.expect(response.user.email).to.eq(req.email);\r",
											"});\r",
											"\r",
											"pm.test(\"C54 Body has valid success\", function () {\r",
											"    pm.expect(response.user.isAdmin).to.be.false;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{loginEmail}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "C55 Login non-existing user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"C55 Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"C55 Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"C55 Body has valid messege\", function () {\r",
									"    pm.expect(response.message).to.be.eq(\"Oops! Your email or password was incorrect. Please try again.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "C56 Login with wrong password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"C56 Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"C56 Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"C56 Body has valid messege\", function () {\r",
									"    pm.expect(response.message).to.be.eq(\"Oops! Your email or password was incorrect. Please try again.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{loginEmail}}\",\r\n    \"password\": \"QW123123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "C57 Login with empty email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"C57 Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"C57 Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"C57 Body has valid messege\", function () {\r",
									"    pm.expect(response.message).to.be.eq(\"Please add all fields!\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "C58 Login with empty password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"C58 Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"C58 Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"C58 Body has valid messege\", function () {\r",
									"    pm.expect(response.message).to.be.eq(\"Please add all fields!\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{loginEmail}}\",\r\n    \"password\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}